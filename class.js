// -------------------------21 урок логические операторы

const hamberger = 2;
const fries = 1;

if(hamberger > 3 && fries){
    console.log('Заказ оформлен, все в наличии')
}else{
    console.log('Мы уходим в другое место');
}
console.log((hamberger <= 3 && fries));

// ----------------------------23 урок цикл в цикле и метки

let result = '';
const length = 7;

for(i=1 ; i < length; i++){
    for(j=0; j<i ; j++){
        result+='*';
    }
    result +='\n';
}
console.log(result);

//*
//** 
//*** 
// ****
// *****
// ******

// 1 При помощи цикла выведите числа от 5 до 10 в консоль. 5 и 10 включительно. 
//Цикл можно использовать любой
// Место для первой задачи
function firstTask() {
    // Пишем решение вот тут
    for(i=5; i<=10; i++){
        console.log(i);
    }
    
}
firstTask();

// 2 При помощи цикла for вывести числа от 20 до 10 в консоль. 
//В обратном порядке (20, 19, 18...). Когда цикл дойдет до числа 13 - остановить весь цикл

// Место для второй задачи

function secondTask() {
    // Пишем решение вот тут
    for(let i=20; i <= 20;i--){
        if(i==13)break;
        console.log(i);
}
    
}
secondTask();


// 3 При помощи цикла for выведите чётные числа от 2 до 10 включительно

function thirdTask() {
    // Пишем решение вот тут
    for(let i=2; i<=10; i++){
       if(i%2==0){
        console.log(i)
       }
    }
    
}
thirdTask();


// 4 task переписать for на while

// Цикл, который нужно переписать:

// for (let i = 2; i <= 16; i++) {
//     if (i % 2 === 0) {
//         continue;
//     } else {
//         console.log(i);
//     }
// }

function fourthTask() {
    // Пишем решение вот тут
    let result = 2;
    while(result <= 16){
        if(result % 2 === 1){
        console.log(result);

        }
        result++;
    }
    
}
 fourthTask();

 //Заполните массив цифрами от 5 до 10 включительно.
 // Помните, что элементы массива можно сформировать так же, как и обращаться к ним: arr[0]
 
 // Место для пятой задачи

function fifthTask() {
    const arrayOfNumbers = [];

    // Пишем решение вот тут
    for(let i=5; i<=10;i++){
        arrayOfNumbers.push(i);
    }
    
    // Не трогаем
    return arrayOfNumbers;
}

// 26 урок аргументы функции
// const udsCurr = 28;
// const eurCurr = 32;

// const convert = (amount, curr) => {
//     console.log(amount * curr);
// }

// convert(500, udsCurr);
// convert(500, eurCurr);

//27 lesson (return) улучшаем код выше

const udsCurr = 28;
const discount = 0.9
const convert = (amount, curr) => {
    console.log(amount * curr);
}
function promotion (result){
    console.log(result * discount);
}
const res = convert(500, udsCurr)
promotion(res) // promotion берет вычисление ф-й res где записано вычисление ф-й конверт,
// и подставляет значение этой функции в аргумент ф-й promotion(result) и дальше выполняюсся действия в теле этой ф-й





/*Задачи:

1) Создайте функцию, которая будет на вход принимать 1 аргумент с именем человека и возвращать строку.

Пример: вызов функции sayHello('Антон') возвращает строку "Привет, Антон!". В решении вызывать функцию не нужно, программа сделает это за вас.

P.S. возвращать - это использовать ключевое слово return.

P.S.S. Это классическая функция-модификатор, которых мы дальше по курсу будем создавать еще много в разных видах.

2) Создайте функцию, которая принимает в себя 1 аргумент в виде целого числа и возвращает массив из трех чисел: 
одно на 1 меньше, сам аргумент, и число на 1 больше.

Пример: вызов функции returnNeighboringNumbers(5) возвращает массив в виде [4, 5, 6].

3) Создайте функцию, которая будет принимать в себя 2 аргумента, оба числа. 
Первое число - это база, второе число - это сколько раз нужно будет повторить это число в прогрессии. 
(Смотри пример ниже). Функция должна возвращать строку (или число в особых случаях, о которых ниже), 
где эти числа идут по порядку, разделенные тремя дефисами "---". После последнего числа их не должно быть.

Если второй аргумент не является числом, равен или меньше нуля - то возвращать просто первый аргумент. 
(Проверяем через оператор typeof)

Примеры:

Вызов функции getMathResult(5, 3) даст ответ 5---10---15

Вызов функции getMathResult(3, 10) даст ответ 3---6---9---12---15---18---21---24---27---30

Вызов функции getMathResult(10, 5) даст ответ 10---20---30---40---50

Вызов функции getMathResult(10, '5') даст ответ 10

Вызов функции getMathResult(10, 0) даст ответ 10

Вызов функции getMathResult(20, -5) даст ответ 20

Эта задача уже ближе к реальности, когда вам нужно учитывать и тип данных у аргументов, проверять их и продумывать логику работы внутри. Обратите внимание на прогрессию, она рассчитывается по простой формуле умножения. Если первый аргумент 5, а второй 3, то число повторяется 3 раза, каждый раз увеличиваясь на само себя. Это базовая математика, которая и нужна для работы в 95% случае на фронтенде.

Да, задача сложнее, но она просто объединяет все то, что мы уже учили.

*/

// 1 решение задачи

const sayHello = (name) =>{
   return ('Привет,' + name);
}
sayHello('Антон');


// Место для второй задачи
function returnNeighboringNumbers(num) {
   return [num-1, num, num+1]
}
returnNeighboringNumbers(2);

// Место для третей задачи

function getMathResult(num, times) {
    if (typeof(times) !== 'number' || times <= 0) {
        return num;
    }

    let str = '';

    for (let i = 1; i <= times; i++) {
        if (i === times) {
            console.log(i);
            str += `${num * i}`;
            // Тут без черточек в конце
        } else {
            str += `${num * i}---`;
            console.log(str);
            // Это тоже самое, что и
            // str = str + num * i + "---"
        }
    }

    return str;
}

console.log(getMathResult(5,3));



//--------------28 lesson Методы и свойства числел и стpок

//строки
const str ='TeSt';
console.log(str.toUpperCase());
console.log(str.toLowerCase());

const fruit = 'Some fruit';
console.log(fruit.indexOf('f'));  // возвращает индекс f

const logg = 'Hello world';
console.log(logg.slice(6,11)) //вырезание 1-с какого символа, 2- сколько символов 
console.log(logg.substring(6,11))

//числа Math

const num = 12.3;
console.log(Math.round(num)); //округление чисел

const test = '12.2px';
console.log(parseInt(test)); //переводит строку в число +округление??  вовращает 12
console.log(parseFloat(test)); // возвращает 12.2


//--------------